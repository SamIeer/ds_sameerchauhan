{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPoOqUxT3GePl/MUxRgze5T"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Hg8P3kZ7muP5","executionInfo":{"status":"ok","timestamp":1761302169214,"user_tz":-330,"elapsed":4034,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"83184912-7880-4cc2-f886-72c4346545c0"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3a734a51","executionInfo":{"status":"ok","timestamp":1761302169261,"user_tz":-330,"elapsed":23,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"cd652dee-e74a-4800-ae8a-ca71706078ef"},"source":["import os\n","# Root folder in your Google Drive\n","ROOT = \"/content/drive/MyDrive/Ds_SameerChauhan\"\n","os.makedirs(ROOT, exist_ok=True)\n","os.makedirs(os.path.join(ROOT, \"csv_files\"), exist_ok=True)\n","os.makedirs(os.path.join(ROOT, \"outputs\"), exist_ok=True)\n","\n","print(\"Created folders:\", os.listdir(ROOT))\n","\n","# === 1. .\n","\n","TRADER_PATH = os.path.join(ROOT, \"csv_files\", \"historical_data.csv\")\n","SENT_PATH = os.path.join(ROOT, \"csv_files\", \"fear_greed_index.csv\")\n","\n","print(\"Trader CSV path:\", TRADER_PATH)\n","print(\"Sentiment CSV path:\", SENT_PATH)\n","\n"],"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["Created folders: ['Notebook1', 'csv_files', 'outputs', '.ipynb_checkpoints']\n","Trader CSV path: /content/drive/MyDrive/Ds_SameerChauhan/csv_files/historical_data.csv\n","Sentiment CSV path: /content/drive/MyDrive/Ds_SameerChauhan/csv_files/fear_greed_index.csv\n"]}]},{"cell_type":"code","metadata":{"id":"99ac4e86","executionInfo":{"status":"ok","timestamp":1761302169273,"user_tz":-330,"elapsed":9,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}}},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score, classification_report\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import cross_val_score"],"execution_count":46,"outputs":[]},{"cell_type":"markdown","source":["<h1>STEP 1</h1>"],"metadata":{"id":"9IBROk2Ykh9v"}},{"cell_type":"code","source":["# Loading the Data\n","try:\n","    df_trader = pd.read_csv(TRADER_PATH, low_memory=False)\n","    df_sent = pd.read_csv(SENT_PATH, low_memory=False)\n","    print(\"Loaded trader:\", TRADER_PATH)\n","    print(\"Loaded sentiment:\", SENT_PATH)\n","except Exception as e:\n","    print(\"Error loading files:\", e)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P2gJRy8aHas6","executionInfo":{"status":"ok","timestamp":1761302170725,"user_tz":-330,"elapsed":1457,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"961796b5-9306-4f91-f7d4-7d9123e81057"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["Loaded trader: /content/drive/MyDrive/Ds_SameerChauhan/csv_files/historical_data.csv\n","Loaded sentiment: /content/drive/MyDrive/Ds_SameerChauhan/csv_files/fear_greed_index.csv\n"]}]},{"cell_type":"code","source":["print(\"\\n--- TRADER DF INFO ---\")\n","display(df_trader.head(3))\n","display(df_trader.info())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":736},"id":"NmgCNJlRIMCi","executionInfo":{"status":"ok","timestamp":1761302170921,"user_tz":-330,"elapsed":194,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"2b55af23-bc81-45d0-9a1b-b0cfa27ba8d2"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","--- TRADER DF INFO ---\n"]},{"output_type":"display_data","data":{"text/plain":["                                      Account  Coin  Execution Price  \\\n","0  0xae5eacaf9c6b9111fd53034a602c192a04e082ed  @107           7.9769   \n","1  0xae5eacaf9c6b9111fd53034a602c192a04e082ed  @107           7.9800   \n","2  0xae5eacaf9c6b9111fd53034a602c192a04e082ed  @107           7.9855   \n","\n","   Size Tokens  Size USD Side     Timestamp IST  Start Position Direction  \\\n","0       986.87   7872.16  BUY  02-12-2024 22:50        0.000000       Buy   \n","1        16.00    127.68  BUY  02-12-2024 22:50      986.524596       Buy   \n","2       144.09   1150.63  BUY  02-12-2024 22:50     1002.518996       Buy   \n","\n","   Closed PnL                                   Transaction Hash     Order ID  \\\n","0         0.0  0xec09451986a1874e3a980418412fcd0201f500c95bac...  52017706630   \n","1         0.0  0xec09451986a1874e3a980418412fcd0201f500c95bac...  52017706630   \n","2         0.0  0xec09451986a1874e3a980418412fcd0201f500c95bac...  52017706630   \n","\n","   Crossed       Fee      Trade ID     Timestamp  \n","0     True  0.345404  8.950000e+14  1.730000e+12  \n","1     True  0.005600  4.430000e+14  1.730000e+12  \n","2     True  0.050431  6.600000e+14  1.730000e+12  "],"text/html":["\n","  <div id=\"df-c839a36b-3e29-43c6-81aa-80382a5c362e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Account</th>\n","      <th>Coin</th>\n","      <th>Execution Price</th>\n","      <th>Size Tokens</th>\n","      <th>Size USD</th>\n","      <th>Side</th>\n","      <th>Timestamp IST</th>\n","      <th>Start Position</th>\n","      <th>Direction</th>\n","      <th>Closed PnL</th>\n","      <th>Transaction Hash</th>\n","      <th>Order ID</th>\n","      <th>Crossed</th>\n","      <th>Fee</th>\n","      <th>Trade ID</th>\n","      <th>Timestamp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0xae5eacaf9c6b9111fd53034a602c192a04e082ed</td>\n","      <td>@107</td>\n","      <td>7.9769</td>\n","      <td>986.87</td>\n","      <td>7872.16</td>\n","      <td>BUY</td>\n","      <td>02-12-2024 22:50</td>\n","      <td>0.000000</td>\n","      <td>Buy</td>\n","      <td>0.0</td>\n","      <td>0xec09451986a1874e3a980418412fcd0201f500c95bac...</td>\n","      <td>52017706630</td>\n","      <td>True</td>\n","      <td>0.345404</td>\n","      <td>8.950000e+14</td>\n","      <td>1.730000e+12</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0xae5eacaf9c6b9111fd53034a602c192a04e082ed</td>\n","      <td>@107</td>\n","      <td>7.9800</td>\n","      <td>16.00</td>\n","      <td>127.68</td>\n","      <td>BUY</td>\n","      <td>02-12-2024 22:50</td>\n","      <td>986.524596</td>\n","      <td>Buy</td>\n","      <td>0.0</td>\n","      <td>0xec09451986a1874e3a980418412fcd0201f500c95bac...</td>\n","      <td>52017706630</td>\n","      <td>True</td>\n","      <td>0.005600</td>\n","      <td>4.430000e+14</td>\n","      <td>1.730000e+12</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0xae5eacaf9c6b9111fd53034a602c192a04e082ed</td>\n","      <td>@107</td>\n","      <td>7.9855</td>\n","      <td>144.09</td>\n","      <td>1150.63</td>\n","      <td>BUY</td>\n","      <td>02-12-2024 22:50</td>\n","      <td>1002.518996</td>\n","      <td>Buy</td>\n","      <td>0.0</td>\n","      <td>0xec09451986a1874e3a980418412fcd0201f500c95bac...</td>\n","      <td>52017706630</td>\n","      <td>True</td>\n","      <td>0.050431</td>\n","      <td>6.600000e+14</td>\n","      <td>1.730000e+12</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c839a36b-3e29-43c6-81aa-80382a5c362e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c839a36b-3e29-43c6-81aa-80382a5c362e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c839a36b-3e29-43c6-81aa-80382a5c362e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-8f85d1d3-e71c-452a-a1b4-21d47e7d42f3\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8f85d1d3-e71c-452a-a1b4-21d47e7d42f3')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-8f85d1d3-e71c-452a-a1b4-21d47e7d42f3 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df_trader\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Account\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"0xae5eacaf9c6b9111fd53034a602c192a04e082ed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Coin\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"@107\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Execution Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.004355456348076651,\n        \"min\": 7.9769,\n        \"max\": 7.9855,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          7.9769\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Size Tokens\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 527.4583290649604,\n        \"min\": 16.0,\n        \"max\": 986.87,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          986.87\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Size USD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4207.183593050501,\n        \"min\": 127.68,\n        \"max\": 7872.16,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          7872.16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Side\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"BUY\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Timestamp IST\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"02-12-2024 22:50\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Start Position\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 574.2431157205459,\n        \"min\": 0.0,\n        \"max\": 1002.518996,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Direction\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Buy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Closed PnL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transaction Hash\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"0xec09451986a1874e3a980418412fcd0201f500c95bac0f37caef8a734502ec49\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Order ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 52017706630,\n        \"max\": 52017706630,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          52017706630\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Crossed\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fee\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.18461042629400107,\n        \"min\": 0.0056,\n        \"max\": 0.34540448,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.34540448\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trade ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 226059726621085.7,\n        \"min\": 443000000000000.0,\n        \"max\": 895000000000000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          895000000000000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Timestamp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 1730000000000.0,\n        \"max\": 1730000000000.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1730000000000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 211224 entries, 0 to 211223\n","Data columns (total 16 columns):\n"," #   Column            Non-Null Count   Dtype  \n","---  ------            --------------   -----  \n"," 0   Account           211224 non-null  object \n"," 1   Coin              211224 non-null  object \n"," 2   Execution Price   211224 non-null  float64\n"," 3   Size Tokens       211224 non-null  float64\n"," 4   Size USD          211224 non-null  float64\n"," 5   Side              211224 non-null  object \n"," 6   Timestamp IST     211224 non-null  object \n"," 7   Start Position    211224 non-null  float64\n"," 8   Direction         211224 non-null  object \n"," 9   Closed PnL        211224 non-null  float64\n"," 10  Transaction Hash  211224 non-null  object \n"," 11  Order ID          211224 non-null  int64  \n"," 12  Crossed           211224 non-null  bool   \n"," 13  Fee               211224 non-null  float64\n"," 14  Trade ID          211224 non-null  float64\n"," 15  Timestamp         211224 non-null  float64\n","dtypes: bool(1), float64(8), int64(1), object(6)\n","memory usage: 24.4+ MB\n"]},{"output_type":"display_data","data":{"text/plain":["None"]},"metadata":{}}]},{"cell_type":"code","source":["print(\"\\n--- SENTIMENT DF INFO ---\")\n","display(df_sent.head(5))\n","display(df_sent.info())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"CO2oxcE8IQ4A","executionInfo":{"status":"ok","timestamp":1761302170988,"user_tz":-330,"elapsed":69,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"5d5f2c1c-7d02-479f-cba0-91add2273c3a"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","--- SENTIMENT DF INFO ---\n"]},{"output_type":"display_data","data":{"text/plain":["    timestamp  value classification        date\n","0  1517463000     30           Fear  2018-02-01\n","1  1517549400     15   Extreme Fear  2018-02-02\n","2  1517635800     40           Fear  2018-02-03\n","3  1517722200     24   Extreme Fear  2018-02-04\n","4  1517808600     11   Extreme Fear  2018-02-05"],"text/html":["\n","  <div id=\"df-4b290b52-e8e9-4bce-b19e-22a130cbe007\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>timestamp</th>\n","      <th>value</th>\n","      <th>classification</th>\n","      <th>date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1517463000</td>\n","      <td>30</td>\n","      <td>Fear</td>\n","      <td>2018-02-01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1517549400</td>\n","      <td>15</td>\n","      <td>Extreme Fear</td>\n","      <td>2018-02-02</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1517635800</td>\n","      <td>40</td>\n","      <td>Fear</td>\n","      <td>2018-02-03</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1517722200</td>\n","      <td>24</td>\n","      <td>Extreme Fear</td>\n","      <td>2018-02-04</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1517808600</td>\n","      <td>11</td>\n","      <td>Extreme Fear</td>\n","      <td>2018-02-05</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4b290b52-e8e9-4bce-b19e-22a130cbe007')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4b290b52-e8e9-4bce-b19e-22a130cbe007 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4b290b52-e8e9-4bce-b19e-22a130cbe007');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7700e612-5480-497e-84ab-86c8c224beac\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7700e612-5480-497e-84ab-86c8c224beac')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7700e612-5480-497e-84ab-86c8c224beac button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df_sent\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"timestamp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 136610,\n        \"min\": 1517463000,\n        \"max\": 1517808600,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1517549400,\n          1517808600,\n          1517635800\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 11,\n        \"max\": 40,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          15,\n          11,\n          40\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"classification\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Extreme Fear\",\n          \"Fear\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2018-02-02\",\n          \"2018-02-05\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 2644 entries, 0 to 2643\n","Data columns (total 4 columns):\n"," #   Column          Non-Null Count  Dtype \n","---  ------          --------------  ----- \n"," 0   timestamp       2644 non-null   int64 \n"," 1   value           2644 non-null   int64 \n"," 2   classification  2644 non-null   object\n"," 3   date            2644 non-null   object\n","dtypes: int64(2), object(2)\n","memory usage: 82.8+ KB\n"]},{"output_type":"display_data","data":{"text/plain":["None"]},"metadata":{}}]},{"cell_type":"code","source":["# === 4. Normalize column names (lowercase, strip spaces) ===\n","df_trader.columns = [c.strip().lower().replace(\" \", \"_\") for c in df_trader.columns]\n","df_sent.columns = [c.strip().lower().replace(\" \", \"_\") for c in df_sent.columns]\n","\n","print(\"\\nNormalized columns (trader):\", df_trader.columns.tolist()[:20])\n","print(\"Normalized columns (sentiment):\", df_sent.columns.tolist())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9IzYECXXIU_X","executionInfo":{"status":"ok","timestamp":1761302171004,"user_tz":-330,"elapsed":13,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"102bd3ed-35e0-4cad-ae47-da67e020209a"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Normalized columns (trader): ['account', 'coin', 'execution_price', 'size_tokens', 'size_usd', 'side', 'timestamp_ist', 'start_position', 'direction', 'closed_pnl', 'transaction_hash', 'order_id', 'crossed', 'fee', 'trade_id', 'timestamp']\n","Normalized columns (sentiment): ['timestamp', 'value', 'classification', 'date']\n"]}]},{"cell_type":"code","source":["# === 5. Common timestamp parsing & date extraction ===\n","# Typical trader time column might be 'time' or 'timestamp'\n","possible_time_cols = [c for c in df_trader.columns if 'time' in c or 'date' in c or 'timestamp' in c]\n","print(\"\\nPossible time columns in trader data:\", possible_time_cols)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MdpDriIFIbDW","executionInfo":{"status":"ok","timestamp":1761302171021,"user_tz":-330,"elapsed":15,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"b0cbd105-44dd-400b-e1e2-3a66fc7df442"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Possible time columns in trader data: ['timestamp_ist', 'timestamp']\n"]}]},{"cell_type":"code","source":["# Replace these with the actual column names from your file\n","TRADER_TIME_COL = possible_time_cols[0]  # change index if needed\n","SENT_DATE_COL = [c for c in df_sent.columns if 'date' in c][0]  # e.g., 'date' or 'Date'"],"metadata":{"id":"FSeURaPKIoOh","executionInfo":{"status":"ok","timestamp":1761302171058,"user_tz":-330,"elapsed":35,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}}},"execution_count":52,"outputs":[]},{"cell_type":"code","source":["# Parse datetimes robustly\n","df_trader[TRADER_TIME_COL] = pd.to_datetime(df_trader[TRADER_TIME_COL], errors='coerce')\n","df_trader['date'] = df_trader[TRADER_TIME_COL].dt.date  # day-level\n","\n","df_sent[SENT_DATE_COL] = pd.to_datetime(df_sent[SENT_DATE_COL], errors='coerce')\n","df_sent['date'] = df_sent[SENT_DATE_COL].dt.date  # day-level"],"metadata":{"id":"Ggzesjt6Islk","executionInfo":{"status":"ok","timestamp":1761302171250,"user_tz":-330,"elapsed":189,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["# Check for parsing issues\n","print(\"\\nTrader time null count:\", df_trader[TRADER_TIME_COL].isna().sum())\n","print(\"Sentiment date null count:\", df_sent[SENT_DATE_COL].isna().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ADNFHuf8IxH_","executionInfo":{"status":"ok","timestamp":1761302171277,"user_tz":-330,"elapsed":22,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"378a5565-b760-4392-eb07-f3ff131ddc2c"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Trader time null count: 131999\n","Sentiment date null count: 0\n"]}]},{"cell_type":"code","source":["# === 6. Quick cleaning of essential numeric columns ===\n","# Typical numeric columns: size, closedPnL, leverage, execution_price, etc.\n","for col in ['size', 'closedpnl', 'closed_pnl', 'closed_pnl', 'leverage', 'execution_price', 'execution_price_usd']:\n","    if col in df_trader.columns:\n","        df_trader[col] = pd.to_numeric(df_trader[col], errors='coerce')"],"metadata":{"id":"vSkRP5fZIzMs","executionInfo":{"status":"ok","timestamp":1761302171287,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["#  basic summary stats for key numeric columns\n","num_cols = df_trader.select_dtypes(include=['number']).columns.tolist()\n","print(\"\\nNumeric columns sample:\", num_cols[:10])\n","display(df_trader[num_cols].describe().T)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":386},"id":"PEl8nYnvI3OD","executionInfo":{"status":"ok","timestamp":1761302171470,"user_tz":-330,"elapsed":187,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"7992c532-6811-4075-cc5a-4904df3b53ef"},"execution_count":56,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Numeric columns sample: ['execution_price', 'size_tokens', 'size_usd', 'start_position', 'closed_pnl', 'order_id', 'fee', 'trade_id', 'timestamp']\n"]},{"output_type":"display_data","data":{"text/plain":["                    count          mean           std           min  \\\n","execution_price  211224.0  1.141472e+04  2.944765e+04  4.530000e-06   \n","size_tokens      211224.0  4.623365e+03  1.042729e+05  8.740000e-07   \n","size_usd         211224.0  5.639451e+03  3.657514e+04  0.000000e+00   \n","start_position   211224.0 -2.994625e+04  6.738074e+05 -1.433463e+07   \n","closed_pnl       211224.0  4.874900e+01  9.191648e+02 -1.179901e+05   \n","order_id         211224.0  6.965388e+10  1.835753e+10  1.732711e+08   \n","fee              211224.0  1.163967e+00  6.758854e+00 -1.175712e+00   \n","trade_id         211224.0  5.628549e+14  3.257565e+14  0.000000e+00   \n","timestamp        211224.0  1.737744e+12  8.689920e+09  1.680000e+12   \n","\n","                          25%           50%           75%           max  \n","execution_price  4.854700e+00  1.828000e+01  1.015800e+02  1.090040e+05  \n","size_tokens      2.940000e+00  3.200000e+01  1.879025e+02  1.582244e+07  \n","size_usd         1.937900e+02  5.970450e+02  2.058960e+03  3.921431e+06  \n","start_position  -3.762311e+02  8.472793e+01  9.337278e+03  3.050948e+07  \n","closed_pnl       0.000000e+00  0.000000e+00  5.792797e+00  1.353291e+05  \n","order_id         5.983853e+10  7.442939e+10  8.335543e+10  9.014923e+10  \n","fee              1.612094e-02  8.957750e-02  3.938110e-01  8.374716e+02  \n","trade_id         2.810000e+14  5.620000e+14  8.460000e+14  1.130000e+15  \n","timestamp        1.740000e+12  1.740000e+12  1.740000e+12  1.750000e+12  "],"text/html":["\n","  <div id=\"df-d35f6847-a334-485e-b2cf-a17e58d40dbf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>execution_price</th>\n","      <td>211224.0</td>\n","      <td>1.141472e+04</td>\n","      <td>2.944765e+04</td>\n","      <td>4.530000e-06</td>\n","      <td>4.854700e+00</td>\n","      <td>1.828000e+01</td>\n","      <td>1.015800e+02</td>\n","      <td>1.090040e+05</td>\n","    </tr>\n","    <tr>\n","      <th>size_tokens</th>\n","      <td>211224.0</td>\n","      <td>4.623365e+03</td>\n","      <td>1.042729e+05</td>\n","      <td>8.740000e-07</td>\n","      <td>2.940000e+00</td>\n","      <td>3.200000e+01</td>\n","      <td>1.879025e+02</td>\n","      <td>1.582244e+07</td>\n","    </tr>\n","    <tr>\n","      <th>size_usd</th>\n","      <td>211224.0</td>\n","      <td>5.639451e+03</td>\n","      <td>3.657514e+04</td>\n","      <td>0.000000e+00</td>\n","      <td>1.937900e+02</td>\n","      <td>5.970450e+02</td>\n","      <td>2.058960e+03</td>\n","      <td>3.921431e+06</td>\n","    </tr>\n","    <tr>\n","      <th>start_position</th>\n","      <td>211224.0</td>\n","      <td>-2.994625e+04</td>\n","      <td>6.738074e+05</td>\n","      <td>-1.433463e+07</td>\n","      <td>-3.762311e+02</td>\n","      <td>8.472793e+01</td>\n","      <td>9.337278e+03</td>\n","      <td>3.050948e+07</td>\n","    </tr>\n","    <tr>\n","      <th>closed_pnl</th>\n","      <td>211224.0</td>\n","      <td>4.874900e+01</td>\n","      <td>9.191648e+02</td>\n","      <td>-1.179901e+05</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>5.792797e+00</td>\n","      <td>1.353291e+05</td>\n","    </tr>\n","    <tr>\n","      <th>order_id</th>\n","      <td>211224.0</td>\n","      <td>6.965388e+10</td>\n","      <td>1.835753e+10</td>\n","      <td>1.732711e+08</td>\n","      <td>5.983853e+10</td>\n","      <td>7.442939e+10</td>\n","      <td>8.335543e+10</td>\n","      <td>9.014923e+10</td>\n","    </tr>\n","    <tr>\n","      <th>fee</th>\n","      <td>211224.0</td>\n","      <td>1.163967e+00</td>\n","      <td>6.758854e+00</td>\n","      <td>-1.175712e+00</td>\n","      <td>1.612094e-02</td>\n","      <td>8.957750e-02</td>\n","      <td>3.938110e-01</td>\n","      <td>8.374716e+02</td>\n","    </tr>\n","    <tr>\n","      <th>trade_id</th>\n","      <td>211224.0</td>\n","      <td>5.628549e+14</td>\n","      <td>3.257565e+14</td>\n","      <td>0.000000e+00</td>\n","      <td>2.810000e+14</td>\n","      <td>5.620000e+14</td>\n","      <td>8.460000e+14</td>\n","      <td>1.130000e+15</td>\n","    </tr>\n","    <tr>\n","      <th>timestamp</th>\n","      <td>211224.0</td>\n","      <td>1.737744e+12</td>\n","      <td>8.689920e+09</td>\n","      <td>1.680000e+12</td>\n","      <td>1.740000e+12</td>\n","      <td>1.740000e+12</td>\n","      <td>1.740000e+12</td>\n","      <td>1.750000e+12</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d35f6847-a334-485e-b2cf-a17e58d40dbf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d35f6847-a334-485e-b2cf-a17e58d40dbf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d35f6847-a334-485e-b2cf-a17e58d40dbf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-c830263a-329b-4303-a18f-19282d2ab609\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c830263a-329b-4303-a18f-19282d2ab609')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-c830263a-329b-4303-a18f-19282d2ab609 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df_trader[num_cols]\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 211224.0,\n        \"max\": 211224.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          211224.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 187543848465422.2,\n        \"min\": -29946.2488391739,\n        \"max\": 562854854500788.5,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          562854854500788.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 108584363288199.31,\n        \"min\": 6.758854383337051,\n        \"max\": 325756470346523.4,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          325756470346523.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 559993385585.195,\n        \"min\": -14334629.0,\n        \"max\": 1680000000000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          8.74e-07\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"25%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 93593427175624.66,\n        \"min\": -376.23107500000003,\n        \"max\": 281000000000000.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          281000000000000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 187258607110755.3,\n        \"min\": 0.0,\n        \"max\": 562000000000000.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          562000000000000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"75%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 281924607457872.06,\n        \"min\": 0.393811,\n        \"max\": 846000000000000.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          846000000000000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 376590431037327.44,\n        \"min\": 837.471593,\n        \"max\": 1130000000000000.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          1130000000000000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["# === 7. Merge by date (inner merge to keep aligned days) ===\n","#  sentiment classification column exists (e.g., classification, label)\n","print(\"\\nSentiment columns:\", df_sent.columns.tolist())\n","SENT_CLASS_COL = 'classification' if 'classification' in df_sent.columns else [c for c in df_sent.columns if 'fear' in c or 'greed' in c or 'class' in c][0]\n","print(\"Using sentiment label column:\", SENT_CLASS_COL)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I3EHm9MjI8tw","executionInfo":{"status":"ok","timestamp":1761302171502,"user_tz":-330,"elapsed":31,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"e204d537-5181-4720-ef96-7e785406dcf6"},"execution_count":57,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Sentiment columns: ['timestamp', 'value', 'classification', 'date']\n","Using sentiment label column: classification\n"]}]},{"cell_type":"code","source":["df_merged = pd.merge(df_trader, df_sent[['date', SENT_CLASS_COL]], on='date', how='inner')\n","print(\"\\nMerged shape:\", df_merged.shape)\n","display(df_merged.head(3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":250},"id":"fW6jGtNsJCZ4","executionInfo":{"status":"ok","timestamp":1761302171581,"user_tz":-330,"elapsed":75,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"6fc82077-9e16-4b02-9cb9-0c883519030e"},"execution_count":58,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Merged shape: (35864, 18)\n"]},{"output_type":"display_data","data":{"text/plain":["                                      account  coin  execution_price  \\\n","0  0xae5eacaf9c6b9111fd53034a602c192a04e082ed  @107           7.9769   \n","1  0xae5eacaf9c6b9111fd53034a602c192a04e082ed  @107           7.9800   \n","2  0xae5eacaf9c6b9111fd53034a602c192a04e082ed  @107           7.9855   \n","\n","   size_tokens  size_usd side       timestamp_ist  start_position direction  \\\n","0       986.87   7872.16  BUY 2024-02-12 22:50:00        0.000000       Buy   \n","1        16.00    127.68  BUY 2024-02-12 22:50:00      986.524596       Buy   \n","2       144.09   1150.63  BUY 2024-02-12 22:50:00     1002.518996       Buy   \n","\n","   closed_pnl                                   transaction_hash     order_id  \\\n","0         0.0  0xec09451986a1874e3a980418412fcd0201f500c95bac...  52017706630   \n","1         0.0  0xec09451986a1874e3a980418412fcd0201f500c95bac...  52017706630   \n","2         0.0  0xec09451986a1874e3a980418412fcd0201f500c95bac...  52017706630   \n","\n","   crossed       fee      trade_id     timestamp        date classification  \n","0     True  0.345404  8.950000e+14  1.730000e+12  2024-02-12          Greed  \n","1     True  0.005600  4.430000e+14  1.730000e+12  2024-02-12          Greed  \n","2     True  0.050431  6.600000e+14  1.730000e+12  2024-02-12          Greed  "],"text/html":["\n","  <div id=\"df-a658a433-d98f-436d-b1f8-d8d6e840a633\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>account</th>\n","      <th>coin</th>\n","      <th>execution_price</th>\n","      <th>size_tokens</th>\n","      <th>size_usd</th>\n","      <th>side</th>\n","      <th>timestamp_ist</th>\n","      <th>start_position</th>\n","      <th>direction</th>\n","      <th>closed_pnl</th>\n","      <th>transaction_hash</th>\n","      <th>order_id</th>\n","      <th>crossed</th>\n","      <th>fee</th>\n","      <th>trade_id</th>\n","      <th>timestamp</th>\n","      <th>date</th>\n","      <th>classification</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0xae5eacaf9c6b9111fd53034a602c192a04e082ed</td>\n","      <td>@107</td>\n","      <td>7.9769</td>\n","      <td>986.87</td>\n","      <td>7872.16</td>\n","      <td>BUY</td>\n","      <td>2024-02-12 22:50:00</td>\n","      <td>0.000000</td>\n","      <td>Buy</td>\n","      <td>0.0</td>\n","      <td>0xec09451986a1874e3a980418412fcd0201f500c95bac...</td>\n","      <td>52017706630</td>\n","      <td>True</td>\n","      <td>0.345404</td>\n","      <td>8.950000e+14</td>\n","      <td>1.730000e+12</td>\n","      <td>2024-02-12</td>\n","      <td>Greed</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0xae5eacaf9c6b9111fd53034a602c192a04e082ed</td>\n","      <td>@107</td>\n","      <td>7.9800</td>\n","      <td>16.00</td>\n","      <td>127.68</td>\n","      <td>BUY</td>\n","      <td>2024-02-12 22:50:00</td>\n","      <td>986.524596</td>\n","      <td>Buy</td>\n","      <td>0.0</td>\n","      <td>0xec09451986a1874e3a980418412fcd0201f500c95bac...</td>\n","      <td>52017706630</td>\n","      <td>True</td>\n","      <td>0.005600</td>\n","      <td>4.430000e+14</td>\n","      <td>1.730000e+12</td>\n","      <td>2024-02-12</td>\n","      <td>Greed</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0xae5eacaf9c6b9111fd53034a602c192a04e082ed</td>\n","      <td>@107</td>\n","      <td>7.9855</td>\n","      <td>144.09</td>\n","      <td>1150.63</td>\n","      <td>BUY</td>\n","      <td>2024-02-12 22:50:00</td>\n","      <td>1002.518996</td>\n","      <td>Buy</td>\n","      <td>0.0</td>\n","      <td>0xec09451986a1874e3a980418412fcd0201f500c95bac...</td>\n","      <td>52017706630</td>\n","      <td>True</td>\n","      <td>0.050431</td>\n","      <td>6.600000e+14</td>\n","      <td>1.730000e+12</td>\n","      <td>2024-02-12</td>\n","      <td>Greed</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a658a433-d98f-436d-b1f8-d8d6e840a633')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a658a433-d98f-436d-b1f8-d8d6e840a633 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a658a433-d98f-436d-b1f8-d8d6e840a633');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b1bf139c-13a0-4d44-bd60-925e6cee8ec1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b1bf139c-13a0-4d44-bd60-925e6cee8ec1')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b1bf139c-13a0-4d44-bd60-925e6cee8ec1 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df_merged\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"account\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"0xae5eacaf9c6b9111fd53034a602c192a04e082ed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"coin\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"@107\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"execution_price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.004355456348076651,\n        \"min\": 7.9769,\n        \"max\": 7.9855,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          7.9769\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"size_tokens\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 527.4583290649604,\n        \"min\": 16.0,\n        \"max\": 986.87,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          986.87\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"size_usd\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4207.183593050501,\n        \"min\": 127.68,\n        \"max\": 7872.16,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          7872.16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"side\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"BUY\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"timestamp_ist\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-02-12 22:50:00\",\n        \"max\": \"2024-02-12 22:50:00\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2024-02-12 22:50:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"start_position\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 574.2431157205459,\n        \"min\": 0.0,\n        \"max\": 1002.518996,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"direction\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Buy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"closed_pnl\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"transaction_hash\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"0xec09451986a1874e3a980418412fcd0201f500c95bac0f37caef8a734502ec49\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"order_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 52017706630,\n        \"max\": 52017706630,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          52017706630\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"crossed\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fee\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.18461042629400107,\n        \"min\": 0.0056,\n        \"max\": 0.34540448,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.34540448\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"trade_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 226059726621085.7,\n        \"min\": 443000000000000.0,\n        \"max\": 895000000000000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          895000000000000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"timestamp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 1730000000000.0,\n        \"max\": 1730000000000.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1730000000000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-02-12\",\n        \"max\": \"2024-02-12\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2024-02-12\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"classification\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Greed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["# === 8. Quick sanity checks ===\n","print(\"\\nUnique sentiment labels:\", df_merged[SENT_CLASS_COL].unique())\n","print(\"Rows per sentiment:\")\n","display(df_merged.groupby(SENT_CLASS_COL).size().reset_index(name='count').sort_values('count', ascending=False))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":278},"id":"s2Z2nFkXJGSw","executionInfo":{"status":"ok","timestamp":1761302171636,"user_tz":-330,"elapsed":52,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"d3845212-bf47-4e39-8a38-822b7b54d96b"},"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Unique sentiment labels: ['Greed' 'Extreme Greed' 'Fear' 'Extreme Fear' 'Neutral']\n","Rows per sentiment:\n"]},{"output_type":"display_data","data":{"text/plain":["  classification  count\n","2           Fear  13869\n","3          Greed  11292\n","1  Extreme Greed   5621\n","4        Neutral   2756\n","0   Extreme Fear   2326"],"text/html":["\n","  <div id=\"df-69e49fef-f6f4-49c5-8c1c-63080b35d137\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>classification</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>Fear</td>\n","      <td>13869</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Greed</td>\n","      <td>11292</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Extreme Greed</td>\n","      <td>5621</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Neutral</td>\n","      <td>2756</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Extreme Fear</td>\n","      <td>2326</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-69e49fef-f6f4-49c5-8c1c-63080b35d137')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-69e49fef-f6f4-49c5-8c1c-63080b35d137 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-69e49fef-f6f4-49c5-8c1c-63080b35d137');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-eab293a6-79a3-47f9-8b9e-cedc34e028d0\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eab293a6-79a3-47f9-8b9e-cedc34e028d0')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-eab293a6-79a3-47f9-8b9e-cedc34e028d0 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df_merged\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"classification\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Greed\",\n          \"Extreme Fear\",\n          \"Extreme Greed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5177,\n        \"min\": 2326,\n        \"max\": 13869,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          11292,\n          2326,\n          5621\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["# === 9. Save processed merged CSV to csv_files/ ===\n","out_path = os.path.join(ROOT, \"csv_files\", \"merged_trader_sentiment.csv\")\n","df_merged.to_csv(out_path, index=False)\n","print(\"Saved merged CSV to:\", out_path)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1QBarfFHJMWM","executionInfo":{"status":"ok","timestamp":1761302172701,"user_tz":-330,"elapsed":1062,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"2782621a-dec9-4d02-8750-761cc61ecf7f"},"execution_count":60,"outputs":[{"output_type":"stream","name":"stdout","text":["Saved merged CSV to: /content/drive/MyDrive/Ds_SameerChauhan/csv_files/merged_trader_sentiment.csv\n"]}]},{"cell_type":"code","source":["# === 10. Save a tiny sample and first output plot for verification ===\n","sample_path = os.path.join(ROOT, \"csv_files\", \"sample_merged.csv\")\n","df_merged.head(500).to_csv(sample_path, index=False)\n","print(\"Saved sample to:\", sample_path)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"08bT1LGXJSO9","executionInfo":{"status":"ok","timestamp":1761302172704,"user_tz":-330,"elapsed":18,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"1982cee5-0337-4203-dfc9-91be4d032edb"},"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["Saved sample to: /content/drive/MyDrive/Ds_SameerChauhan/csv_files/sample_merged.csv\n"]}]},{"cell_type":"code","source":["# Basic plot to visually confirm values (leverage boxplot by sentiment)\n","plt.figure(figsize=(8,4))\n","if 'leverage' in df_merged.columns:\n","    sns.boxplot(data=df_merged, x=SENT_CLASS_COL, y='leverage')\n","    plt.title(\"Sample: leverage by sentiment\")\n","    plt.tight_layout()\n","    out_img = os.path.join(ROOT, \"outputs\", \"leverage_by_sentiment.png\")\n","    plt.savefig(out_img)\n","    print(\"Saved sample plot to:\", out_img)\n","else:\n","    print(\"No 'leverage' column found, skipping leverage plot. Check df_merged.columns\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":52},"id":"199twqpKJVCk","executionInfo":{"status":"ok","timestamp":1761302172765,"user_tz":-330,"elapsed":61,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"674e6294-8a6e-4dce-f6a7-d82a2c1c868f"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["No 'leverage' column found, skipping leverage plot. Check df_merged.columns\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x400 with 0 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":["df_merged.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6AxJoYmpJYJl","executionInfo":{"status":"ok","timestamp":1761302172784,"user_tz":-330,"elapsed":17,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"afcfabdd-eacb-47f6-e65f-81c2f35be6fe"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(35864, 18)"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["df_merged.columns.tolist()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mynk6ihHKZRL","executionInfo":{"status":"ok","timestamp":1761302172799,"user_tz":-330,"elapsed":13,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"958d4e8f-4986-429f-c3e0-67d360c2d4b5"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['account',\n"," 'coin',\n"," 'execution_price',\n"," 'size_tokens',\n"," 'size_usd',\n"," 'side',\n"," 'timestamp_ist',\n"," 'start_position',\n"," 'direction',\n"," 'closed_pnl',\n"," 'transaction_hash',\n"," 'order_id',\n"," 'crossed',\n"," 'fee',\n"," 'trade_id',\n"," 'timestamp',\n"," 'date',\n"," 'classification']"]},"metadata":{},"execution_count":64}]},{"cell_type":"markdown","source":["<h1>STEP 2</h1>"],"metadata":{"id":"fsnmhpzuk1K4"}},{"cell_type":"markdown","source":["<h1>EDA and Visual Insights</h1>"],"metadata":{"id":"Z1lR8_O0K6rP"}},{"cell_type":"code","source":["sns.set(style=\"whitegrid\", palette=\"muted\")\n","\n","df = df_merged.copy()\n","SENT_COL = 'classification'\n","\n","# 1️ Basic overview\n","print(\"Unique sentiments:\", df[SENT_COL].unique())\n","print(\"\\nCount per sentiment:\")\n","print(df[SENT_COL].value_counts())\n","\n"," #2️ Basic statistics comparison\n","print(\"\\n--- Summary Stats by Sentiment ---\")\n","display(df.groupby(SENT_COL)[['closed_pnl', 'size_usd']].describe())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":497},"id":"zZKI3e_bKhze","executionInfo":{"status":"ok","timestamp":1761302172860,"user_tz":-330,"elapsed":60,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"975008cd-7cdc-4b6b-9a8f-0de792a70c0f"},"execution_count":65,"outputs":[{"output_type":"stream","name":"stdout","text":["Unique sentiments: ['Greed' 'Extreme Greed' 'Fear' 'Extreme Fear' 'Neutral']\n","\n","Count per sentiment:\n","classification\n","Fear             13869\n","Greed            11292\n","Extreme Greed     5621\n","Neutral           2756\n","Extreme Fear      2326\n","Name: count, dtype: int64\n","\n","--- Summary Stats by Sentiment ---\n"]},{"output_type":"display_data","data":{"text/plain":["               closed_pnl                                               \\\n","                    count        mean          std            min  25%   \n","classification                                                           \n","Extreme Fear       2326.0    1.891632    76.727713   -1430.889856  0.0   \n","Extreme Greed      5621.0  205.816345  1861.557119  -18360.670070  0.0   \n","Fear              13869.0  128.287950  1342.348497  -19841.240140  0.0   \n","Greed             11292.0   53.988003  1399.468182 -117990.104100  0.0   \n","Neutral            2756.0   27.088803   142.945889   -1032.981540  0.0   \n","\n","                                                 size_usd               \\\n","                    50%        75%           max    count         mean   \n","classification                                                           \n","Extreme Fear    0.00000   0.298102   2020.000000   2326.0  4118.761840   \n","Extreme Greed   0.96048  30.153710  44223.451870   5621.0  3242.085086   \n","Fear            0.00000   8.201820  71535.716740  13869.0  5744.782685   \n","Greed           0.00000  13.441364  34903.817100  11292.0  5051.878829   \n","Neutral         0.00000   9.267691   2979.554311   2756.0  4332.202906   \n","\n","                                                                             \n","                         std   min       25%     50%        75%         max  \n","classification                                                               \n","Extreme Fear    15702.854699  0.01  199.2800  599.12  2180.4225   299999.97  \n","Extreme Greed    9048.672642  0.01   89.0400  365.00  1986.5000   120300.37  \n","Fear            26723.276216  0.00  230.2200  703.88  2205.5200  1190250.00  \n","Greed           23155.688268  0.00  218.4700  675.08  2451.9775   931290.00  \n","Neutral         11912.999218  0.02   72.2325  411.81  1999.9525   156638.27  "],"text/html":["\n","  <div id=\"df-bfc51561-6c96-4978-beab-33885c9530d3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th colspan=\"8\" halign=\"left\">closed_pnl</th>\n","      <th colspan=\"8\" halign=\"left\">size_usd</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","    <tr>\n","      <th>classification</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Extreme Fear</th>\n","      <td>2326.0</td>\n","      <td>1.891632</td>\n","      <td>76.727713</td>\n","      <td>-1430.889856</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>0.298102</td>\n","      <td>2020.000000</td>\n","      <td>2326.0</td>\n","      <td>4118.761840</td>\n","      <td>15702.854699</td>\n","      <td>0.01</td>\n","      <td>199.2800</td>\n","      <td>599.12</td>\n","      <td>2180.4225</td>\n","      <td>299999.97</td>\n","    </tr>\n","    <tr>\n","      <th>Extreme Greed</th>\n","      <td>5621.0</td>\n","      <td>205.816345</td>\n","      <td>1861.557119</td>\n","      <td>-18360.670070</td>\n","      <td>0.0</td>\n","      <td>0.96048</td>\n","      <td>30.153710</td>\n","      <td>44223.451870</td>\n","      <td>5621.0</td>\n","      <td>3242.085086</td>\n","      <td>9048.672642</td>\n","      <td>0.01</td>\n","      <td>89.0400</td>\n","      <td>365.00</td>\n","      <td>1986.5000</td>\n","      <td>120300.37</td>\n","    </tr>\n","    <tr>\n","      <th>Fear</th>\n","      <td>13869.0</td>\n","      <td>128.287950</td>\n","      <td>1342.348497</td>\n","      <td>-19841.240140</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>8.201820</td>\n","      <td>71535.716740</td>\n","      <td>13869.0</td>\n","      <td>5744.782685</td>\n","      <td>26723.276216</td>\n","      <td>0.00</td>\n","      <td>230.2200</td>\n","      <td>703.88</td>\n","      <td>2205.5200</td>\n","      <td>1190250.00</td>\n","    </tr>\n","    <tr>\n","      <th>Greed</th>\n","      <td>11292.0</td>\n","      <td>53.988003</td>\n","      <td>1399.468182</td>\n","      <td>-117990.104100</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>13.441364</td>\n","      <td>34903.817100</td>\n","      <td>11292.0</td>\n","      <td>5051.878829</td>\n","      <td>23155.688268</td>\n","      <td>0.00</td>\n","      <td>218.4700</td>\n","      <td>675.08</td>\n","      <td>2451.9775</td>\n","      <td>931290.00</td>\n","    </tr>\n","    <tr>\n","      <th>Neutral</th>\n","      <td>2756.0</td>\n","      <td>27.088803</td>\n","      <td>142.945889</td>\n","      <td>-1032.981540</td>\n","      <td>0.0</td>\n","      <td>0.00000</td>\n","      <td>9.267691</td>\n","      <td>2979.554311</td>\n","      <td>2756.0</td>\n","      <td>4332.202906</td>\n","      <td>11912.999218</td>\n","      <td>0.02</td>\n","      <td>72.2325</td>\n","      <td>411.81</td>\n","      <td>1999.9525</td>\n","      <td>156638.27</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bfc51561-6c96-4978-beab-33885c9530d3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bfc51561-6c96-4978-beab-33885c9530d3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bfc51561-6c96-4978-beab-33885c9530d3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-a14519f3-a7bd-4d76-84b7-254518ee7fc3\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a14519f3-a7bd-4d76-84b7-254518ee7fc3')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-a14519f3-a7bd-4d76-84b7-254518ee7fc3 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": [\n        \"classification\",\n        \"\"\n      ],\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Extreme Greed\",\n          \"Neutral\",\n          \"Fear\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"closed_pnl\",\n        \"count\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5177.223647863786,\n        \"min\": 2326.0,\n        \"max\": 13869.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5621.0,\n          2756.0,\n          13869.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"closed_pnl\",\n        \"mean\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 83.18701671895279,\n        \"min\": 1.8916322231298361,\n        \"max\": 205.81634505888633,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          205.81634505888633,\n          27.088803330914367,\n          128.28795029591174\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"closed_pnl\",\n        \"std\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 806.1899610210179,\n        \"min\": 76.72771255395546,\n        \"max\": 1861.5571189594932,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1861.5571189594932,\n          142.94588861345952,\n          1342.3484968403664\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"closed_pnl\",\n        \"min\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49043.93480353176,\n        \"min\": -117990.1041,\n        \"max\": -1032.98154,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -18360.67007,\n          -1032.98154,\n          -19841.24014\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"closed_pnl\",\n        \"25%\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"closed_pnl\",\n        \"50%\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.42953971420579956,\n        \"min\": 0.0,\n        \"max\": 0.96048,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.96048\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"closed_pnl\",\n        \"75%\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.068981799064117,\n        \"min\": 0.298102,\n        \"max\": 30.15371,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          30.15371\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"closed_pnl\",\n        \"max\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29402.98362279026,\n        \"min\": 2020.0,\n        \"max\": 71535.71674,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          44223.45187\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"size_usd\",\n        \"count\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5177.223647863786,\n        \"min\": 2326.0,\n        \"max\": 13869.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5621.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"size_usd\",\n        \"mean\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 949.9843858532444,\n        \"min\": 3242.085086283579,\n        \"max\": 5744.782685125099,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3242.085086283579\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"size_usd\",\n        \"std\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7462.270015708628,\n        \"min\": 9048.672641664647,\n        \"max\": 26723.27621576132,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          9048.672641664647\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"size_usd\",\n        \"min\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.008366600265340755,\n        \"min\": 0.0,\n        \"max\": 0.02,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.01\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"size_usd\",\n        \"25%\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 75.18955810982001,\n        \"min\": 72.2325,\n        \"max\": 230.22,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          89.04\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"size_usd\",\n        \"50%\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 154.15376161482402,\n        \"min\": 365.0,\n        \"max\": 703.88,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          365.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"size_usd\",\n        \"75%\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 189.30046085357264,\n        \"min\": 1986.5,\n        \"max\": 2451.9775,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1986.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": [\n        \"size_usd\",\n        \"max\"\n      ],\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 489041.5303236587,\n        \"min\": 120300.37,\n        \"max\": 1190250.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          120300.37\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["#  Plot 1: Average Profit (closed_pnl) by Sentiment\n","plt.figure(figsize=(7,4))\n","sns.barplot(data=df, x=SENT_COL, y='closed_pnl', ci='sd')\n","plt.title(\"Average Trader Profit by Sentiment (Fear vs Greed)\")\n","plt.ylabel(\"Average Closed PnL (USD)\")\n","plt.tight_layout()\n","plt.savefig(f\"/content/drive/MyDrive/Ds_SameerChauhan/outputs/avg_profit_by_sentiment.png\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":442},"id":"4p-SKXmGLQo7","executionInfo":{"status":"ok","timestamp":1761302173286,"user_tz":-330,"elapsed":424,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"127095d9-6412-48c5-c878-e30f4f68c93c"},"execution_count":66,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-3867724597.py:3: FutureWarning: \n","\n","The `ci` parameter is deprecated. Use `errorbar='sd'` for the same effect.\n","\n","  sns.barplot(data=df, x=SENT_COL, y='closed_pnl', ci='sd')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 700x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","#  Plot 2: Trade Volume (size_usd) by Sentiment\n","plt.figure(figsize=(7,4))\n","sns.boxplot(data=df, x=SENT_COL, y='size_usd')\n","plt.yscale(\"log\")  # often size is skewed\n","plt.title(\"Trade Size (USD) Distribution by Sentiment\")\n","plt.tight_layout()\n","plt.savefig(f\"/content/drive/MyDrive/Ds_SameerChauhan/outputs/trade_size_by_sentiment.png\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":421},"id":"9KJDnuqNLdKQ","executionInfo":{"status":"ok","timestamp":1761302174263,"user_tz":-330,"elapsed":952,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"497f06e7-a386-4170-cd22-d4eb1b14735e"},"execution_count":67,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 700x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#  Plot 3: Total Volume Comparison\n","volume_by_sent = df.groupby(SENT_COL)['size_usd'].sum().reset_index()\n","plt.figure(figsize=(6,4))\n","sns.barplot(data=volume_by_sent, x=SENT_COL, y='size_usd')\n","plt.title(\"Total Trading Volume by Sentiment\")\n","plt.ylabel(\"Sum of Trade Size (USD)\")\n","plt.tight_layout()\n","plt.savefig(f\"/content/drive/MyDrive/Ds_SameerChauhan/outputs/total_volume_by_sentiment.png\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":401},"id":"uGs3LDc2LjAZ","executionInfo":{"status":"ok","timestamp":1761302174543,"user_tz":-330,"elapsed":278,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"f50a6012-a9b6-4a7e-8a56-26aba3cb6393"},"execution_count":68,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","# Plot 4: Trade Side distribution (buy/sell)\n","if 'side' in df.columns:\n","    plt.figure(figsize=(7,4))\n","    sns.countplot(data=df, x='side', hue=SENT_COL)\n","    plt.title(\"Trade Sides (Buy/Sell) under Fear vs Greed\")\n","    plt.tight_layout()\n","    plt.savefig(f\"/content/drive/MyDrive/Ds_SameerChauhan/outputs/trade_side_by_sentiment.png\")\n","    plt.show()\n","else:\n","    print(\"No 'side' column found — skipping side distribution plot\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":355},"id":"v0Cux0kmLmDB","executionInfo":{"status":"ok","timestamp":1761302175104,"user_tz":-330,"elapsed":556,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"8c164b02-52bf-4de4-d523-00fd42bc9961"},"execution_count":69,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 700x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# 7Plot 5: Daily Average Profit Trend\n","daily_profit = df.groupby(['date', SENT_COL])['closed_pnl'].mean().reset_index()\n","plt.figure(figsize=(10,4))\n","sns.lineplot(data=daily_profit, x='date', y='closed_pnl', hue=SENT_COL)\n","plt.title(\"Daily Average Profit Trend by Sentiment\")\n","plt.tight_layout()\n","plt.savefig(f\"/content/drive/MyDrive/Ds_SameerChauhan/outputs/daily_avg_profit_trend.png\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":252},"id":"C2lvHDtKLtaW","executionInfo":{"status":"ok","timestamp":1761302175711,"user_tz":-330,"elapsed":600,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"15b657a5-393c-41c2-9629-750525df71ab"},"execution_count":70,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#  Save a summary CSV of metrics\n","summary = df.groupby(SENT_COL).agg(\n","    avg_profit=('closed_pnl','mean'),\n","    median_profit=('closed_pnl','median'),\n","    avg_size_usd=('size_usd','mean'),\n","    total_volume=('size_usd','sum'),\n","    trade_count=('closed_pnl','count')\n",").reset_index()"],"metadata":{"id":"OXhqurtGLyfB","executionInfo":{"status":"ok","timestamp":1761302175723,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}}},"execution_count":71,"outputs":[]},{"cell_type":"code","source":["\n","summary_path = \"/content/drive/MyDrive/Ds_SameerChauhan/csv_files/sentiment_summary.csv\"\n","summary.to_csv(summary_path, index=False)\n","print(\"\\nSaved summary CSV:\", summary_path)\n","display(summary)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"FWyBaBU6L2sf","executionInfo":{"status":"ok","timestamp":1761302175787,"user_tz":-330,"elapsed":55,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"19fe4422-0089-4aaf-ff35-528d5c0a9560"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Saved summary CSV: /content/drive/MyDrive/Ds_SameerChauhan/csv_files/sentiment_summary.csv\n"]},{"output_type":"display_data","data":{"text/plain":["  classification  avg_profit  median_profit  avg_size_usd  total_volume  \\\n","0   Extreme Fear    1.891632        0.00000   4118.761840    9580240.04   \n","1  Extreme Greed  205.816345        0.96048   3242.085086   18223760.27   \n","2           Fear  128.287950        0.00000   5744.782685   79674391.06   \n","3          Greed   53.988003        0.00000   5051.878829   57045815.74   \n","4        Neutral   27.088803        0.00000   4332.202906   11939551.21   \n","\n","   trade_count  \n","0         2326  \n","1         5621  \n","2        13869  \n","3        11292  \n","4         2756  "],"text/html":["\n","  <div id=\"df-f75c9a43-5b18-4142-8b11-5384fb915fc4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>classification</th>\n","      <th>avg_profit</th>\n","      <th>median_profit</th>\n","      <th>avg_size_usd</th>\n","      <th>total_volume</th>\n","      <th>trade_count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Extreme Fear</td>\n","      <td>1.891632</td>\n","      <td>0.00000</td>\n","      <td>4118.761840</td>\n","      <td>9580240.04</td>\n","      <td>2326</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Extreme Greed</td>\n","      <td>205.816345</td>\n","      <td>0.96048</td>\n","      <td>3242.085086</td>\n","      <td>18223760.27</td>\n","      <td>5621</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Fear</td>\n","      <td>128.287950</td>\n","      <td>0.00000</td>\n","      <td>5744.782685</td>\n","      <td>79674391.06</td>\n","      <td>13869</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Greed</td>\n","      <td>53.988003</td>\n","      <td>0.00000</td>\n","      <td>5051.878829</td>\n","      <td>57045815.74</td>\n","      <td>11292</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Neutral</td>\n","      <td>27.088803</td>\n","      <td>0.00000</td>\n","      <td>4332.202906</td>\n","      <td>11939551.21</td>\n","      <td>2756</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f75c9a43-5b18-4142-8b11-5384fb915fc4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f75c9a43-5b18-4142-8b11-5384fb915fc4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f75c9a43-5b18-4142-8b11-5384fb915fc4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-6b93c4e9-9ada-4345-bcc2-aad2554e0d21\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6b93c4e9-9ada-4345-bcc2-aad2554e0d21')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-6b93c4e9-9ada-4345-bcc2-aad2554e0d21 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_e9da7743-4e19-4dbe-aeb3-50a292f7f90d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('summary')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e9da7743-4e19-4dbe-aeb3-50a292f7f90d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('summary');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"summary","summary":"{\n  \"name\": \"summary\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"classification\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Extreme Greed\",\n          \"Neutral\",\n          \"Fear\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"avg_profit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 83.18701671895279,\n        \"min\": 1.8916322231298366,\n        \"max\": 205.81634505888633,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          205.81634505888633,\n          27.08880333091437,\n          128.28795029591174\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"median_profit\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.42953971420579956,\n        \"min\": 0.0,\n        \"max\": 0.96048,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.96048,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"avg_size_usd\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 949.9843858532445,\n        \"min\": 3242.085086283579,\n        \"max\": 5744.782685125099,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3242.085086283579,\n          4332.202906386067\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31387821.702208918,\n        \"min\": 9580240.04,\n        \"max\": 79674391.06,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          18223760.27,\n          11939551.21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"trade_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5177,\n        \"min\": 2326,\n        \"max\": 13869,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5621,\n          2756\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","source":["<h1> STEP 3 :\n","Spliting and Training Some Models for core understanding</h2>"],"metadata":{"id":"5P4i68KWVwUO"}},{"cell_type":"code","source":["df = df_merged.copy()\n","SENT_COL = 'classification'"],"metadata":{"id":"Kw8kFkrqL5__","executionInfo":{"status":"ok","timestamp":1761302175795,"user_tz":-330,"elapsed":5,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}}},"execution_count":73,"outputs":[]},{"cell_type":"code","source":["# 1️ Filter for main sentiments only (Fear & Greed) to simplify model\n","df_main = df[df[SENT_COL].isin(['Fear', 'Greed'])].copy()"],"metadata":{"id":"9WoV9EOIWDG_","executionInfo":{"status":"ok","timestamp":1761302175802,"user_tz":-330,"elapsed":3,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}}},"execution_count":74,"outputs":[]},{"cell_type":"code","source":["# 2️ Aggregate trader stats per day\n","daily = df_main.groupby(['date', SENT_COL]).agg({\n","    'closed_pnl':'mean',\n","    'size_usd':'sum'\n","}).reset_index()\n","\n","\n","print(\"Daily-level dataset shape:\", daily.shape)\n","display(daily.head())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":224},"id":"Lu2upnD6WFzG","executionInfo":{"status":"ok","timestamp":1761302175845,"user_tz":-330,"elapsed":39,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"830b41a9-972c-49ce-fb8f-78098cd58493"},"execution_count":75,"outputs":[{"output_type":"stream","name":"stdout","text":["Daily-level dataset shape: (93, 4)\n"]},{"output_type":"display_data","data":{"text/plain":["         date classification  closed_pnl   size_usd\n","0  2023-01-05           Fear    0.000000     477.00\n","1  2024-01-01          Greed   -7.196192  264239.53\n","2  2024-01-02          Greed    0.000000    2008.18\n","3  2024-01-03          Greed   60.176945  472974.70\n","4  2024-01-04          Greed   32.570953  339470.47"],"text/html":["\n","  <div id=\"df-b260a1ad-d675-442a-9d65-cfa607f5267d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>classification</th>\n","      <th>closed_pnl</th>\n","      <th>size_usd</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-01-05</td>\n","      <td>Fear</td>\n","      <td>0.000000</td>\n","      <td>477.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-01-01</td>\n","      <td>Greed</td>\n","      <td>-7.196192</td>\n","      <td>264239.53</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-01-02</td>\n","      <td>Greed</td>\n","      <td>0.000000</td>\n","      <td>2008.18</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-01-03</td>\n","      <td>Greed</td>\n","      <td>60.176945</td>\n","      <td>472974.70</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-01-04</td>\n","      <td>Greed</td>\n","      <td>32.570953</td>\n","      <td>339470.47</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b260a1ad-d675-442a-9d65-cfa607f5267d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b260a1ad-d675-442a-9d65-cfa607f5267d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b260a1ad-d675-442a-9d65-cfa607f5267d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-968e7bdd-3888-4e29-bb27-34a004cfbef9\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-968e7bdd-3888-4e29-bb27-34a004cfbef9')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-968e7bdd-3888-4e29-bb27-34a004cfbef9 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(daily\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-05\",\n        \"max\": \"2024-01-04\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2024-01-01\",\n          \"2024-01-04\",\n          \"2024-01-02\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"classification\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Greed\",\n          \"Fear\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"closed_pnl\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.5923852358217,\n        \"min\": -7.196192222222223,\n        \"max\": 60.176944591240876,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -7.196192222222223,\n          32.57095332467532\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"size_usd\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 209672.67966571212,\n        \"min\": 477.0,\n        \"max\": 472974.7,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          264239.52999999997,\n          339470.47\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["# 3️ Encode sentiment (Fear = 0, Greed = 1)\n","daily['label'] = daily[SENT_COL].map({'Fear':0, 'Greed':1})"],"metadata":{"id":"O0SiWktYWQ12","executionInfo":{"status":"ok","timestamp":1761302175854,"user_tz":-330,"elapsed":4,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}}},"execution_count":76,"outputs":[]},{"cell_type":"code","source":["# 4️ Prepare features and labels\n","X = daily[['closed_pnl', 'size_usd']]\n","y = daily['label']"],"metadata":{"id":"-wFVfYAVWWdh","executionInfo":{"status":"ok","timestamp":1761302175864,"user_tz":-330,"elapsed":5,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}}},"execution_count":77,"outputs":[]},{"cell_type":"code","source":["# 5️ Split data (80/20)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"],"metadata":{"id":"r3etZwWSWYtZ","executionInfo":{"status":"ok","timestamp":1761302175871,"user_tz":-330,"elapsed":3,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}}},"execution_count":78,"outputs":[]},{"cell_type":"code","source":["# 6️ Fit a simple Logistic Regression\n","lg_model = LogisticRegression(max_iter=200)\n","dt_model = DecisionTreeClassifier(random_state=42)\n","rf_model = RandomForestClassifier(n_estimators=100, random_state=42)\n","\n"],"metadata":{"id":"HhbKqIc7Wbx7","executionInfo":{"status":"ok","timestamp":1761302175911,"user_tz":-330,"elapsed":10,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}}},"execution_count":79,"outputs":[]},{"cell_type":"code","source":["\n","cv_folds = 5\n","lg_scores = cross_val_score(dt_model, X, y, cv=cv_folds, scoring='accuracy')\n","dt_scores = cross_val_score(dt_model, X, y, cv=cv_folds, scoring='accuracy')\n","rf_scores = cross_val_score(rf_model, X, y, cv=cv_folds, scoring='accuracy')"],"metadata":{"id":"ZP-SJjTfWey2","executionInfo":{"status":"ok","timestamp":1761302176649,"user_tz":-330,"elapsed":744,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}}},"execution_count":80,"outputs":[]},{"cell_type":"code","source":["\n","print(f\"Logistic Regression CV Accuracy: {lg_scores.mean():.2f} ± {lg_scores.std():.2f}\")\n","print(f\"Decision Tree CV Accuracy: {dt_scores.mean():.2f} ± {dt_scores.std():.2f}\")\n","print(f\"Random Forest CV Accuracy: {rf_scores.mean():.2f} ± {rf_scores.std():.2f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bnCtNiZkWg9s","executionInfo":{"status":"ok","timestamp":1761302176674,"user_tz":-330,"elapsed":23,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"4d172836-5336-4500-a647-24c3b8bd2822"},"execution_count":81,"outputs":[{"output_type":"stream","name":"stdout","text":["Logistic Regression CV Accuracy: 0.48 ± 0.05\n","Decision Tree CV Accuracy: 0.48 ± 0.05\n","Random Forest CV Accuracy: 0.53 ± 0.08\n"]}]},{"cell_type":"code","source":["# 3️⃣ Fit models on train set and evaluate on test set\n","lg_model.fit(X_train, y_train)\n","dt_model.fit(X_train, y_train)\n","rf_model.fit(X_train, y_train)\n","\n","y_pred_lg = lg_model.predict(X_test)\n","y_pred_dt = dt_model.predict(X_test)\n","y_pred_rf = rf_model.predict(X_test)\n","\n","print(\"\\nLogistic Regression Classification Report:\")\n","print(classification_report(y_test, y_pred_lg, target_names=['Fear', 'Greed']))\n","\n","print(\"\\nDecision Tree Classification Report:\")\n","print(classification_report(y_test, y_pred_dt, target_names=['Fear', 'Greed']))\n","\n","print(\"\\nRandom Forest Classification Report:\")\n","print(classification_report(y_test, y_pred_rf, target_names=['Fear', 'Greed']))\n","\n","# 4️⃣ Feature importance for Random Forest\n","rf_feat_df = pd.DataFrame({\n","    'Feature': X.columns,\n","    'Importance': rf_model.feature_importances_\n","})\n","display(rf_feat_df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":698},"id":"eh26b4iZXBmV","executionInfo":{"status":"ok","timestamp":1761302177008,"user_tz":-330,"elapsed":329,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"2c928423-bb40-4ba6-bd27-f48412832c45"},"execution_count":82,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Logistic Regression Classification Report:\n","              precision    recall  f1-score   support\n","\n","        Fear       0.50      0.33      0.40         6\n","       Greed       0.73      0.85      0.79        13\n","\n","    accuracy                           0.68        19\n","   macro avg       0.62      0.59      0.59        19\n","weighted avg       0.66      0.68      0.66        19\n","\n","\n","Decision Tree Classification Report:\n","              precision    recall  f1-score   support\n","\n","        Fear       0.60      0.50      0.55         6\n","       Greed       0.79      0.85      0.81        13\n","\n","    accuracy                           0.74        19\n","   macro avg       0.69      0.67      0.68        19\n","weighted avg       0.73      0.74      0.73        19\n","\n","\n","Random Forest Classification Report:\n","              precision    recall  f1-score   support\n","\n","        Fear       0.43      0.50      0.46         6\n","       Greed       0.75      0.69      0.72        13\n","\n","    accuracy                           0.63        19\n","   macro avg       0.59      0.60      0.59        19\n","weighted avg       0.65      0.63      0.64        19\n","\n"]},{"output_type":"display_data","data":{"text/plain":["      Feature  Importance\n","0  closed_pnl    0.448039\n","1    size_usd    0.551961"],"text/html":["\n","  <div id=\"df-376cc38f-e541-48f9-90d8-e4f2f4549c87\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Feature</th>\n","      <th>Importance</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>closed_pnl</td>\n","      <td>0.448039</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>size_usd</td>\n","      <td>0.551961</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-376cc38f-e541-48f9-90d8-e4f2f4549c87')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-376cc38f-e541-48f9-90d8-e4f2f4549c87 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-376cc38f-e541-48f9-90d8-e4f2f4549c87');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b749ae1d-7dcc-4b4e-a42e-d0dda466ffc7\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b749ae1d-7dcc-4b4e-a42e-d0dda466ffc7')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b749ae1d-7dcc-4b4e-a42e-d0dda466ffc7 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_e72d9570-5c52-4630-a30c-976976c06873\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('rf_feat_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e72d9570-5c52-4630-a30c-976976c06873 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('rf_feat_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"rf_feat_df","summary":"{\n  \"name\": \"rf_feat_df\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Feature\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"size_usd\",\n          \"closed_pnl\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Importance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07348448006648585,\n        \"min\": 0.44803862583302023,\n        \"max\": 0.5519613741669799,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.5519613741669799,\n          0.44803862583302023\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["import numpy as np\n","\n","# === Step 3b: Visualize Decision Boundaries ===\n","\n","# Models to visualize\n","models = {\n","    'Logistic Regression': lg_model,\n","    'Decision Tree': dt_model,\n","    'Random Forest': rf_model\n","}\n","\n","# Create meshgrid for plotting\n","x_min, x_max = X['size_usd'].min() - 1, X['size_usd'].max() + 1\n","y_min, y_max = X['closed_pnl'].min() - 1, X['closed_pnl'].max() + 1\n","xx, yy = np.meshgrid(np.linspace(x_min, x_max, 200),\n","                     np.linspace(y_min, y_max, 200))\n","\n","plt.figure(figsize=(18,5))\n","\n","for i, (name, clf) in enumerate(models.items()):\n","    # Predict on meshgrid\n","    Z = clf.predict(np.c_[xx.ravel(), yy.ravel()])\n","    Z = Z.reshape(xx.shape)\n","\n","    # Plot\n","    plt.subplot(1, 3, i+1)\n","    plt.contourf(xx, yy, Z, alpha=0.3, cmap='coolwarm')\n","    sns.scatterplot(x='size_usd', y='closed_pnl', hue=SENT_COL, data=daily, alpha=0.7)\n","    plt.title(f\"{name} Decision Boundary\")\n","    plt.xlabel('size_usd')\n","    plt.ylabel('closed_pnl')\n","\n","plt.tight_layout()\n","plt.savefig(\"//content/drive/MyDrive/Ds_SameerChauhan/outputs/fear_greed_decision_boundaries.png\")\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":304},"id":"EBgYdS9AadGR","executionInfo":{"status":"ok","timestamp":1761302390394,"user_tz":-330,"elapsed":1164,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"fc347e62-87f6-4d25-b068-441096f1c6c1"},"execution_count":84,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.12/dist-packages/sklearn/utils/validation.py:2739: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names\n","  warnings.warn(\n","/usr/local/lib/python3.12/dist-packages/sklearn/utils/validation.py:2739: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n","  warnings.warn(\n","/usr/local/lib/python3.12/dist-packages/sklearn/utils/validation.py:2739: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1800x500 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":[],"metadata":{"id":"l_tNckNtVGGi"}},{"cell_type":"code","source":["%cd /content/drive/MyDrive/Ds_SameerChauhan"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RrTTx4gfXIJF","executionInfo":{"status":"ok","timestamp":1761311759382,"user_tz":-330,"elapsed":51,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"afb2ec7d-9df2-47a2-9df8-86d5a4104de5"},"execution_count":90,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Ds_SameerChauhan\n"]}]},{"cell_type":"code","source":["!ls\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zRlPLto2XNbx","executionInfo":{"status":"ok","timestamp":1761311777451,"user_tz":-330,"elapsed":151,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"ca3deb2c-9e69-404b-a9ea-b5b006734c32"},"execution_count":91,"outputs":[{"output_type":"stream","name":"stdout","text":["csv_files  ds_report.pdf  Notebook1  outputs\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"KxXgsAzpXR2K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!git init\n","!git config --global user.email \"sameerchauhan212204@gmail.com\"\n","!git config --global user.name \"SamIeer\"\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WPKwufT2VGmW","executionInfo":{"status":"ok","timestamp":1761311814948,"user_tz":-330,"elapsed":867,"user":{"displayName":"Sameer Chauhan","userId":"01399993696763402363"}},"outputId":"255b66d9-5d06-445d-db09-399b732b893b"},"execution_count":92,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[33mhint: Using 'master' as the name for the initial branch. This default branch name\u001b[m\n","\u001b[33mhint: is subject to change. To configure the initial branch name to use in all\u001b[m\n","\u001b[33mhint: of your new repositories, which will suppress this warning, call:\u001b[m\n","\u001b[33mhint: \u001b[m\n","\u001b[33mhint: \tgit config --global init.defaultBranch <name>\u001b[m\n","\u001b[33mhint: \u001b[m\n","\u001b[33mhint: Names commonly chosen instead of 'master' are 'main', 'trunk' and\u001b[m\n","\u001b[33mhint: 'development'. The just-created branch can be renamed via this command:\u001b[m\n","\u001b[33mhint: \u001b[m\n","\u001b[33mhint: \tgit branch -m <name>\u001b[m\n","Initialized empty Git repository in /content/drive/MyDrive/Ds_SameerChauhan/.git/\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"73HckWK3V69s"},"execution_count":null,"outputs":[]}]}